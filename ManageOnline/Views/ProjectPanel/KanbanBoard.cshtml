@using ManageOnline.Models
@model ManageOnline.Models.ProjectModel

@{
    ViewBag.Title = "KanbanBoard";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}
<script src='//production-assets.codepen.io/assets/editor/live/console_runner-079c09a0e3b9ff743e39ee2d5637b9216b3545af0de366d4b9aad9dc87e26bfd.js'></script>
<script src='//production-assets.codepen.io/assets/editor/live/events_runner-73716630c22bbc8cff4bd0f07b135f00a0bdc5d14629260c3ec49e5606f98fdd.js'></script>
<script src='//production-assets.codepen.io/assets/editor/live/css_live_reload_init-2c0dc5167d60a5af3ee189d570b1835129687ea2a61bee3513dee3a50c115a77.js'></script><meta charset='UTF-8'><meta name="robots" content="noindex"><link rel="shortcut icon" type="image/x-icon" href="//production-assets.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" /><link rel="mask-icon" type="" href="//production-assets.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" /><link rel="canonical" href="https://codepen.io/clemer/pen/MvvamY?limit=all&page=5&q=uikit" />

<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.28/css/uikit.min.css'>
<style class="cp-pen-styles">
    .uk-flex-none {
        flex: none !important;
    }

    /**
     * Custom CSS
    **/
    .uk-card-title > small {
        font-size: 50%;
    }

    .user-group {
        padding-left: 15px;
    }

        .user-group > li {
            display: inline;
        }

            .user-group > li:before, .user-group > li:after {
                content: none;
            }

            .user-group > li:hover > img {
                transform: scale(1.3);
                cursor: pointer;
                z-index: 10;
            }

            .user-group > li > img {
                border: 2px solid #fff;
                margin-left: -15px;
                position: relative;
            }
</style>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>





<div class="card text-center">

    <div class="card-header">
        <ul class="nav nav-pills card-header-pills">
            <li class="nav-item">
                <a onclick="location.href = '@Url.Action("ProjectPanel", "ProjectPanel", new { projectId=Model.ProjectId}, null)'" class="nav-link ">Informacje</a>
            </li>
            <li class="nav-item">
                <a onclick="location.href = '@Url.Action("KanbanBoard", "ProjectPanel", new { projectId=Model.ProjectId}, null)'" class="nav-link active">Kanban board</a>
            </li>
            <li class="nav-item">
                <a onclick="location.href = '@Url.Action("EmployeesFromProject", "Employees", new { projectId=Model.ProjectId}, null)'" class="nav-link ">Pracownicy</a>
            </li>
            <li class="nav-item">
                <a onclick="location.href = '@Url.Action("ProjectFiles", "ProjectPanel", new { projectId=Model.ProjectId}, null)'" class="nav-link ">Pliki</a>
            </li>
            @if (Model.ProjectStatus.ToString() == "Finished")
            {
                <button type="button" style="margin-left:10px;" onclick="location.href = '@Url.Action("RateUsersFromProject", "Rate", new { projectId=Model.ProjectId}, null)'" class="btn btn-success float-right">Wystaw oceny za projekt</button>
            }
        </ul>
    </div>
    @if (Model.ProjectStatus.ToString() == "InProgress")
    {
        <div class="card-header">
            <div>
                @Html.Action("AddTask", "Task", Model.ProjectId)
            </div>
        </div>
    }
    <div class="col-12" id="kanbanBoard">
        <div class="row">
            <div class="col-4 kanbanColumn" style="cursor: pointer">
                <h3>Do zrobienia</h3>
                <div class="progress" style="height: 20px;">
                    <div class="progress-bar progress-bar-striped bg-warning" value="@ViewBag.CountNotStartedTasks" id="progressBarNotStartedTasks" role="progressbar" style="width: @ViewBag.progressBarNotStartedTasksWidth%;" aria-valuenow="@ViewBag.CountNotStartedTasks" aria-valuemin="0" aria-valuemax="@ViewBag.CountAllTasks"><label id="lblProgressBarNotStartedTasks">@ViewBag.CountNotStartedTasks/@ViewBag.CountAllTasks</label></div>
                </div>
                <ul id="sortable1" style=" min-height:300px;" class="connectedSortable ui-sortable-handle">
                    @foreach (var task in Model.Tasks.Where(task => task.ColumnNumber == 1))
                    {
                        <div class="uk-margin" id='@task.TaskId'>
                            <div class="uk-card uk-card-hover uk-card-default uk-card-small">
                                <div class="uk-card-body">
                                    <h3 class="uk-card-title uk-margin-remove">@task.TaskName</h3>
                                    <p class="uk-text-meta uk-margin-remove"><b>Data dodania:</b> @task.TaskCreationDate</p>
                                    @if (task.CurrentWorkerAtTask != null)
                                    {
                                    <ul class="user-group">
                                        <img class="uk-border-circle uk-box-shadow-hover-medium" style="height: 40px; width: 40px" src="data:image;base64,@System.Convert.ToBase64String(task.CurrentWorkerAtTask.UserPhoto)">
                                        @task.CurrentWorkerAtTask.Username
                                    </ul>
                                    }
                                </div>
                                <div class="uk-card-footer uk-background-muted">
                                    <div class="row">
                                        @Html.Action("ShowTaskDetails", "Task", new { taskId = task.TaskId })@Html.Action("EditTask", "Task", new { taskId = task.TaskId })<div class="btn btn-sm btn-danger col-3" onclick="location.href = '@Url.Action("DeleteTask", "Task", new { projectId=Model.ProjectId, taskId= task.TaskId}, null)'">Usuń</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </ul>
            </div>

            <div class="col-4 kanbanColumn" style="cursor: pointer">
                <h3>W trakcie</h3>
                <div class="progress" style="height: 20px;">
                    <div class="progress-bar progress-bar-striped bg-info" id="progressBarInProgressTasks" value="@ViewBag.CountInProgressTasks" role="progressbar" style="width:@ViewBag.progressBarInProgressTasksWidth%;" aria-valuenow="@ViewBag.CountInProgressTasks" aria-valuemin="0" aria-valuemax="@ViewBag.CountAllTasks"><label id="lblProgressBarInProgressTasks">@ViewBag.CountInProgressTasks/@ViewBag.CountAllTasks</label></div>
                </div>
                <ul id="sortable2" style="min-height:300px;" class="connectedSortable ui-sortable-handle ">
                    @foreach (var task in Model.Tasks.Where(task => task.ColumnNumber == 2))
                    {
                        <div class="uk-margin" id='@task.TaskId'>
                            <div class="uk-card uk-card-hover uk-card-default uk-card-small">
                                <div class="uk-card-body">
                                    <h3 class="uk-card-title uk-margin-remove">@task.TaskName</h3>
                                    <p class="uk-text-meta uk-margin-remove"><b>Data Dodania:</b> @task.TaskCreationDate<br /><b>Data rozpoczęcia:</b> @task.TaskStartDate</p>
                                    @if (task.CurrentWorkerAtTask != null)
                                    {
                                        <ul class="user-group">
                                            <img class="uk-border-circle uk-box-shadow-hover-medium" style="height: 40px; width: 40px" src="data:image;base64,@System.Convert.ToBase64String(task.CurrentWorkerAtTask.UserPhoto)">
                                            @task.CurrentWorkerAtTask.Username
                                        </ul>
                                    }
                                </div>
                                <div class="uk-card-footer uk-background-muted">
                                    <div class="row">
                                        @Html.Action("ShowTaskDetails", "Task", new { taskId = task.TaskId })@Html.Action("EditTask", "Task", new { taskId = task.TaskId })<div class="btn btn-sm btn-danger col-3" onclick="location.href = '@Url.Action("DeleteTask", "Task", new { projectId=Model.ProjectId, taskId= task.TaskId}, null)'">Usuń</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </ul>
            </div>
            <div class="col-4 kanbanColumn" style="cursor: pointer">
                <h3>Zakończone</h3>
                <div class="progress " style="height: 20px;">
                    <div class="progress-bar progress-bar-striped bg-success" id="progressBarFinishedTasks" value="@ViewBag.CountFinishedTasks" role="progressbar" style="width: @ViewBag.progressBarFinishedTasksWidth%" aria-valuenow="@ViewBag.CountFinishedTasks" aria-valuemin="0" aria-valuemax="@ViewBag.CountAllTasks">
                        <label id="lblProgressBarFinishedTasks">@ViewBag.CountFinishedTasks/@ViewBag.CountAllTasks</label>
                    </div>
                </div>
                <ul id="sortable3" style=" min-height:300px;" class="connectedSortable ui-sortable-handle ">
                    @foreach (var task in Model.Tasks.Where(task => task.ColumnNumber == 3))
                    {
                        <div class="uk-margin" id='@task.TaskId'>
                            <div class="uk-card uk-card-hover uk-card-default uk-card-small">
                                <div class="uk-card-body">
                                    <h3 class="uk-card-title uk-margin-remove">@task.TaskName</h3>
                                    <p class="uk-text-meta uk-margin-remove"><b>Data dodania:</b> @task.TaskCreationDate<br /><b>Data rozpoczęcia:</b> @task.TaskStartDate<br /><b>Data zakończenia:</b> @task.TaskCreationDate </p>
                                    @if (task.CurrentWorkerAtTask != null)
                                    {
                                    <ul class="user-group">
                                        <img class="uk-border-circle uk-box-shadow-hover-medium" style="height: 40px; width: 40px" src="data:image;base64,@System.Convert.ToBase64String(task.CurrentWorkerAtTask.UserPhoto)">
                                        @task.CurrentWorkerAtTask.Username
                                    </ul>   
                                    }
                                </div>
                                <div class="uk-card-footer uk-background-muted">
                                    <div class="row">
                                        @Html.Action("ShowTaskDetails", "Task", new { taskId = task.TaskId })@Html.Action("EditTask", "Task", new { taskId = task.TaskId })<div class="btn btn-sm btn-danger col-3" onclick="location.href = '@Url.Action("DeleteTask", "Task", new { projectId=Model.ProjectId, taskId= task.TaskId}, null)'">Usuń</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </ul>
            </div>
        </div>
    </div>



    <script type="text/javascript">

    $(function () {
        $("#sortable1, #sortable2, #sortable3").sortable({
            connectWith: ".connectedSortable",
            update: function () {
                var columnFromKanban1 = $('#sortable1').sortable('toArray').toString();
                var columnFromKanban2 = $('#sortable2').sortable('toArray').toString();
                var columnFromKanban3 = $('#sortable3').sortable('toArray').toString();
                var toast = Metro.toast.create;
                var notStartedTasksWidth = $('#sortable1').sortable('toArray').length;
                var inProgressTasksWidth = $('#sortable2').sortable('toArray').length;
                var finishedTasksWidth = $('#sortable3').sortable('toArray').length;
                var allTasks = notStartedTasksWidth + inProgressTasksWidth + finishedTasksWidth;
                var ProjectId = '@Model.ProjectId'
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateTaskPosition","Task")',
                    data: {
                        column1: columnFromKanban1,
                        column2: columnFromKanban2,
                        column3: columnFromKanban3,
                        projectId: ProjectId
                    },
                    success: function (data) {
                        var toast = Metro.toast.create;
                        document.getElementById('progressBarNotStartedTasks').style.width = ((notStartedTasksWidth / allTasks) * 100) + '%';
                        document.getElementById('lblProgressBarNotStartedTasks').innerHTML = notStartedTasksWidth + "/" + allTasks;;
                        document.getElementById('progressBarInProgressTasks').style.width = ((inProgressTasksWidth / allTasks) * 100) + '%';
                        document.getElementById('lblProgressBarInProgressTasks').innerHTML = inProgressTasksWidth + "/" + allTasks;;
                        document.getElementById('progressBarFinishedTasks').style.width = ((finishedTasksWidth / allTasks) * 100) + '%';
                        document.getElementById('lblProgressBarFinishedTasks').innerHTML = finishedTasksWidth + "/" + allTasks;
                        toast("Status zadania został zaktualizowany", null, 3000, "bg-green fg-white");
                    }
                });
            }
        }).disableSelection();
    });

    </script>


