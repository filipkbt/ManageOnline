@model ManageOnline.Models.TaskModel

@using (Html.BeginForm("EditTask", "Task", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="modal fade text-dark" id="editTask_@Model.TaskId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title text-dark" id="exampleModalLabel"><b>Edytuj zadanie</b></h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-dark">
                    <center>
                        @Html.HiddenFor(x => x.TaskId)
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col">
                                <h4>Nazwa zadania</h4>
                                @Html.TextBoxFor(model => model.TaskName)
                                @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col">
                                <h4>Opis zadania</h4>
                                @Html.TextAreaFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control", rows = "6", cols = "10" } })
                                @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col">
                                <h4>Przypisz zadanie do:</h4>
                                @Html.DropDownListFor(model => model.CurrentWorkerAtTask.UserId, new SelectList(ViewBag.Users, "UserId", "Username"))
                                @Html.ValidationMessageFor(model => model.CurrentWorkerAtTask.UserId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (Model.ScrumSprintWhereTaskBelong != null)
                        {
                            <div class="form-group">
                                <div class="col">
                                    <h4>Status zadania:</h4>
                                    @Html.EnumDropDownListFor(model => model.TaskStatus)
                                </div>
                            </div>
                        }
                    </center>
                    <div class="modal-footer">
                        <div class="form-group">
                            <button type="submit" class="btn btn-success">Edytuj zadanie</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<button type="button" class="btn btn-sm btn-info col-4" style="margin-right:5px;" data-toggle="modal" data-target="#editTask_@Model.TaskId">
    Edytuj
</button>

